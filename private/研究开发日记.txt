找论文的时候关注发表在哪个会议上icaps，Socs，ijcai，AAAI

关于发表：
1.介绍概念时简单的配一些图
2.组合优化，NP问题的例子介绍(watchman route problem)，解决方法介绍(A*)？
5.如何联系现实，现实问题的数据从何而来
6.关于实验数据的评价可以展示一部分？
title->目次->自己的研究背景/研究意义->従来研究->
->研究目的ー＞本研究の概要(问题描述：多用公式)ー＞採用手法（研究フロー）（評価手法）
->今後の予定->参考文献
引用文献只写人名和年份？[xxxら,IPCO2020],尽量多写公式和画图，少文字，页数要标
7. 论文可以加一段证明NP困难

5.7：
利用pypy提升计算效率
LOS8的结果并非最优，如何找到最优-》已修复
完善G_DLS, 白色的cell依然需要被考虑-》已修复
作为代价，选项变多导致速度变慢
在11size情况下，即使轻微调整A*比例，也会使得最优解变成次优
5.9
将图改为了返回邻接矩阵，包括MST算法，导致速度慢了2-5秒
5.16
f=g+h计算方法变化
局部算法实装
实装新的LOS
5.29
搜索问题的其他例子：搜寻遇难船只，寻找罪犯，寻找野外遇难人员
moving target：
target如何移动也会成为一个问题
MA:
考虑与MAPF的不同：1.MA的碰撞问题 2. 不存在一个终点，所以可以选择尽量避免碰撞的路线
碰撞类型：1。彼此交换位置 2.到达同一位置
基本方法：single-agent方法规划最短到达目的地路径，每一个时间点，机器人可以选择停止或者行动
		如果机器人相撞，则让其中一个停止
		-》机器人数量增多后效率显著下降
CBS（Conflict-Based Search）：2层A*算法，第一层计算每个agent的最优path，第二层计算path上发生的碰撞并解决
		对每个agent，先忽略其他agent进行规划，全体规划完之后，
		检查是否碰撞，碰撞的话则增加一个额外约束，并重新规划路线，重复过程直到没有碰撞发生
ECBS: 用了2个heuristic，一个用于估算到终点需要的代价，一个估算当前节点到终点还要展开多少个节点
moving target: 定义-》target位置已知，且是直接抓住target
kinematic constraint 动量约束不考虑
6.1
可以在论文加一段作证该问题是NP困难
MAWRP不存在一个终点，所以原先的启发式函数可能会不太好用
新问题的评价基准如何设定？
MTSP：m个salesman，目标是最小化总代价,从同一起点出发
利用某种分配方式(clustring)将目标资源分配给m个agent,然后设计最短路线，然后再解决碰撞问题
objective：minimum time
computer game 学会: AIIDE, Ai AND interactive digital entertainment
 如果人数不固定，这又会成为一个新的最优化问题（综合考虑人员成本和时间成本），而且还需要考虑agent的位置
 -》agent从同一位置起步
6-10
寻找罪犯-》罪犯会移动
寻找野外遇难人员-》获取不到地图
搜寻遇难船只->海上很宽阔并没有障碍物
以原神地图为范例进行说明-》区域探索：标注雷神瞳，找目标-》给玩家提供最优路线毫无意义
MA-A*(Multi agent A*)
MAPF centralized algorithm?
借鉴CBS的思想，每个agent选择一个当前方向，然后再用另一个heuiristc评价当前的碰撞数
6-11
首先，h是共有的，
如何在开始时令agent往不同的方向探索：1.赋予他们不同的action
7-3
SOM算法可以解决common depot or not
多agent人数分配问题 -> 不考虑
是否可能造成行动pattern单纯？-> 不考虑
如何保证解的质量？-> 不考虑
7-14
不考虑每走一步都同步，2-layer search足够
7-16
直接一口气走完再改-》并发
7-19
如果出发不在区域内，会出错-》考虑如何解决，出发点问题1.出发点选择 2.聚类选择
无法跨越别的区域进行探索-》考虑如何解决
并发是否有效需要验证？为何没有效果——》几秒以内计算并没有变快，需要有相对平衡的聚类才会加速 -》 聚类平衡问题，能否通过2layer来解决
						想要加速并发，减小minmax极为重要
初始化函数可以优化-》APSP

7-23
删除并发部分，最终做研究不需要并发
APSP应用

7-25
跨越区域问题解决？
聚类优化问题：
	1.使用更多特征优化算法，尽量使得每个cluster尺寸保持接近状态？
	2.对聚类后结果进行优化
	3.平衡聚类
聚类优化比较失败，收到跨域问题影响
如果是minsum标准，聚类平衡与否有意义嘛？

7-31
是解决非联通问题，还是实现必定联通的算法-》实现必定联通
增加了坐标位置的2个特征，平衡性问题有所好转，但仍然需要解决连通性问题-》balanced+connect
SCIP暂时用不着，
balanced kmeans不可行

8-3
路径再规划问题，试着实装一下？
地图确认-》彩虹6号，自动规划路线可以省去路线设计的工夫
实装步骤：
初始化:先随机选择一个点，随后选择的中心都是与已选择点中距离最远的
每次吸收一个新的cell，就要更新一次
评价是否吸收cell的规则用距离最近即可
新加入的cell一定要与已存在的簇是连接的
每个簇都用一个生成树来表示，数中每个节点都有自己的前驱节点
distance(p): 表示p点所属的根节点r，p与r节点之间的总路径长度， 当一个点还不属于任何簇，distance(p)=-1
extensible node:假如簇中节点p与不属于任何簇的节点q相连，p就是可延伸节点
extensible(C): 表示簇C所有可延申节点，
reachable node：与extensible相连的簇外节点
选择点加入簇的条件：从reachable中选q节点，条件：Min(distance(h)+length(h,q))，h代表所有的extensible节点
每次通过可延伸节点p加入新的节点q，要设置distance(q)=distance(p)+length(p,q), cluster(q)=cluster(p), pred(q)=p

可以选择在执行数次construction step之后，对最优的结果进行一次improvement step即可。
需要重新选择中心时（construction step完成之后的重置），仍然可以选择取离簇中的中心点的cell。
改善部分，当一个cell被分配到别的cell去，以这个点作为父节点的所有cell就需要进行重新安排，看看与其他簇内cell是否能够重连，如果全部都能重连就ok
8-8
平衡聚类基本完成
寻找临界点方式还可以优化
无法在保证联通的情况下做到完整的平衡，因为临界点很少，且无法move的情况是有的，move之后簇可能会断成两截
8-15
读新论文
起点与聚类的问题还没有解决，在聚类时规定一个类只能拥有一个起点，聚类算法优化完成，不再需要指定起点
8-19 8-22
《平衡聚类算法部分有问题发生，需要解决》-》解决
地图小路窄的情况下很容易出错，因为聚类时会被另一个类给堵住。
以及问题2：当起点把另一个起点堵在一个小区域时，平衡聚类无法调整，会出现一个很小一个很大的情况
原来想法：在第二阶段的平衡步骤使用共同区域的概念，但分配非常难以实现，特别是当类增多的时候
解决办法：把起点作为初始聚类中心，但聚类时忽略起点的问题，随后设计路线时如果起点不在类中就创造一条相连的路径
==================
当前剩余任务：
3. 自适应算法，先令h的比重为1，然后逐渐减小比重
5. 通过增加障碍物以及map尺寸，测试各个h的效率变化
6. 如何证明是局部最优和不是全局最优
8. 评价基准-》以及存在其他解法，比较即可（很麻烦，需要实装别的算法）
	如果是不同问题，则无需比较
9. 两个指标:MINMAX,MINSUM
   如果是MINTIME，那么COST如何考虑-》且评价基准可能也需要改变，如与最优解作对比
12. 指标方面，我真正想评价的是什么？
===============
场景设计问题(AIIDE)：
NPC巡逻问题：MinMAX
资源勘探问题，城市中火灾等救援问题，地图标注问题-》游戏中可行，现实中无人机可以解决
对于救援问题来说，但同时有机器人和人时，他们适应的环境不同
===============
先行研究不同：
AGP+TSP:非最优，且要回到原点
LOS函数是不受限制的（但实际上也有受限制的）
==========

				
		



